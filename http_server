#!/usr/bin/env python3
#
# python http server
# author: wayne chan
# 2023/02/19

import os, sys, socketserver
from http.server import SimpleHTTPRequestHandler

HTTP_SERVER_AT = os.path.split(os.path.abspath(__file__))[0]

class NoCacheMdHandler(SimpleHTTPRequestHandler):
  def __init__(self, *args, directory=None, **kwarg):
    if not directory: directory = HTTP_SERVER_AT
    super().__init__(*args,directory=directory,**kwarg)
  
  def end_headers(self):
    if self.path[-3:] == '.md' or self.path[-12:] == '/config.json':
      self.send_my_headers()
    SimpleHTTPRequestHandler.end_headers(self)
  
  def send_my_headers(self):
    self.send_header('Cache-Control','no-cache, no-store, must-revalidate')
    self.send_header('Pragma','no-cache')
    self.send_header('Expires', '0')

if __name__ == '__main__':
  PORT = 8000
  if len(sys.argv) > 1:
    try:
      PORT = int(sys.argv[-1])
    except ValueError: pass
  
  with socketserver.TCPServer(('',PORT),NoCacheMdHandler) as httpd:
    print('Homepage: http://localhost:%s/index.html' % PORT)
    httpd.serve_forever()

# usage: python3 http_server [port]
