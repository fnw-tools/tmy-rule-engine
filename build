#!/usr/bin/env python3
#
# markdown book builder
# author: wayne chan
# 2023/02/17

import os, sys, json, hashlib

EXCLUDES = []
base_dir = os.path.dirname(os.path.abspath(__file__))

def scan_files():
  ret = []
  b = os.listdir(base_dir)
  for item in b:
    if item[-3:] == '.md' and item[:6] != 'README' and (item not in EXCLUDES):
      a_file = os.path.join(base_dir,item)
      if os.path.isfile(a_file):
        ret.append(item[:-3])
  return ret

if __name__ == '__main__':
  argv = sys.argv[1:]
  if '--help' in argv:
    print('Usage: python3 build [--help] [--title title] [--author author] [--desc desc] [--keywords keywords] [--ver ver]\n')
  else:
    cfg_items = [('title',''),('author',''),('desc',''),('keywords',''),('ver',''),('quoto','easy-book')]
    cfg = dict(cfg_items)
    
    json_file = os.path.join(base_dir,'config.json')
    if os.path.isfile(json_file):
      with open(json_file,'rt') as f:
        cfg.update(json.load(f))
    
    idx = 0; n = len(argv)
    while idx < n:
      item = argv[idx]
      idx += 1
      
      if idx < n:
        for k,v in cfg_items:  # scan config-able items
          if item == k:
            cfg[item] = argv[idx]
            idx += 1
            break
    
    files = sorted(scan_files())
    cfg['files'] = files
    
    available_type = (int,str,list)   # not includes float, since it may differ on same value when CPU precision different
    kv = sorted([[k,v] for k,v in cfg.items() if k != 'checksum' and isinstance(v,available_type)])
    kv = json.dumps(kv,indent=None,separators=(',',':')).encode('utf-8')
    cfg['checksum'] = hashlib.sha256(b'fns_book:' + kv).hexdigest()
    
    with open(json_file,'wt') as f2:
      json.dump(cfg,f2,indent=2)
    
    print('success write config.json, total %i file(s).\n' % (len(files),))
